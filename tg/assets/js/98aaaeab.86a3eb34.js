"use strict";(self.webpackChunkm_19_v=self.webpackChunkm_19_v||[]).push([[8797],{2350:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"references/cheat-sheet/k8s/helm","title":"Helm","description":"Basic terms","source":"@site/docs/references/cheat-sheet/k8s/helm.md","sourceDirName":"references/cheat-sheet/k8s","slug":"/references/cheat-sheet/k8s/helm","permalink":"/tg/docs/references/cheat-sheet/k8s/helm","draft":false,"unlisted":false,"editUrl":"https://github.com/m19v/m19v.github.io/blob/main/docs/references/cheat-sheet/k8s/helm.md","tags":[],"version":"current","lastUpdatedBy":"m19v","lastUpdatedAt":1761828399000,"frontMatter":{"title":"Helm"},"sidebar":"tutorialSidebar","previous":{"title":"Kubernetes","permalink":"/tg/docs/category/kubernetes"},"next":{"title":"Kubectl","permalink":"/tg/docs/references/cheat-sheet/k8s/kubectl"}}');var s=n(4848),l=n(8453);const r={title:"Helm"},i=void 0,o={},h=[{value:"Basic terms",id:"basic-terms",level:2},{value:"Chart Management",id:"chart-management",level:2},{value:"Install and Uninstall Apps",id:"install-and-uninstall-apps",level:2},{value:"Perform App Upgrade and Rollback",id:"perform-app-upgrade-and-rollback",level:2},{value:"List, Add, Remove, and Update Repositories",id:"list-add-remove-and-update-repositories",level:2},{value:"Search Repositories",id:"search-repositories",level:2},{value:"Helm Release monitoring",id:"helm-release-monitoring",level:2},{value:"Download Release Information",id:"download-release-information",level:2},{value:"Plugin Management",id:"plugin-management",level:2},{value:"References",id:"references",level:2}];function c(e){const a={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h2,{id:"basic-terms",children:"Basic terms"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"Chart        # It is name of your chart in case it has been pulled and untarred.\n             # It is <repo_name>/<chart_name> in case the repository has been added but chart not pulled.\n             # It is the URL/Absolute path to the chart.\n\nName         # It is the name you want to give to your current helm chart installation.\n\nRelease      # Is the name you assigned to an installation instance.\n\nRevision     # Is the value from the Helm history command\n\nRepo-name    # The name of a repository.\n\nDIR          # Directory name/path\n"})}),"\n",(0,s.jsx)(a.h2,{id:"chart-management",children:"Chart Management"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"helm create <name>                      # Creates a chart directory along with the common files and directories used in a chart.\n\nhelm package <chart-path>               # Packages a chart into a versioned chart archive file.\n\nhelm lint <chart>                       # Run tests to examine a chart and identify possible issues:\n\nhelm show all <chart>                   # Inspect a chart and list its contents:\nhelm show values <chart>                # Displays the contents of the values.yaml file\n\nhelm pull <chart>                       # Download/pull chart \nhelm pull <chart> --untar=true          # If set to true, will untar the chart after downloading it\nhelm pull <chart> --verify              # Verify the package before using it\nhelm pull <chart> --version <number>    # Default-latest is used, specify a version constraint for the chart version to use\n\nhelm dependency list <chart>            # Display a list of a chart\u2019s dependencies:\n"})}),"\n",(0,s.jsx)(a.h2,{id:"install-and-uninstall-apps",children:"Install and Uninstall Apps"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"helm install <name> <chart>                           # Install the chart with a name\nhelm install <name> <chart> --namespace <namespace>   # Install the chart in a specific namespace\nhelm install <name> <chart> --set key1=val1,key2=val2 # Set values on the command line (can specify multiple or separate values with commas)\nhelm install <name> <chart> --values <yaml-file/url>  # Install the chart with your specified values\nhelm install <name> <chart> --dry-run --debug         # Run a test installation to validate chart (p)\nhelm install <name> <chart> --verify                  # Verify the package before using it \nhelm install <name> <chart> --dependency-update       # update dependencies if they are missing before installing the chart\nhelm uninstall <name>                                 # Uninstall a release\n"})}),"\n",(0,s.jsx)(a.h2,{id:"perform-app-upgrade-and-rollback",children:"Perform App Upgrade and Rollback"}),"\n",(0,s.jsx)(a.h2,{id:"list-add-remove-and-update-repositories",children:"List, Add, Remove, and Update Repositories"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"helm repo add <repo-name> <url>                   # Add a repository from the internet:\nhelm repo list                                    # List added chart repositories\nhelm repo update                                  # Update information of available charts locally from chart repositories\n"})}),"\n",(0,s.jsx)(a.h2,{id:"search-repositories",children:"Search Repositories"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"helm search repo <keyword>        # Search repositories for a keyword in charts\nhelm search hub <keyword>         # Search for charts in the Artifact Hub or your own hub instance\n"})}),"\n",(0,s.jsx)(a.h2,{id:"helm-release-monitoring",children:"Helm Release monitoring"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"helm env                                 # Env prints out all the environment information in use by Helm.\n"})}),"\n",(0,s.jsx)(a.h2,{id:"download-release-information",children:"Download Release Information"}),"\n",(0,s.jsx)(a.h2,{id:"plugin-management",children:"Plugin Management"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"helm plugin list                          # View a list of all installed plugins\n"})}),"\n",(0,s.jsx)(a.h2,{id:"references",children:"References"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://helm.sh/docs/intro/cheatsheet/",children:"Cheat Sheet - HELM"})})]})}function d(e={}){const{wrapper:a}={...(0,l.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>i});var t=n(6540);const s={},l=t.createContext(s);function r(e){const a=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:a},e.children)}}}]);