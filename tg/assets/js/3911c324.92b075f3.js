"use strict";(self.webpackChunkm_19_v=self.webpackChunkm_19_v||[]).push([[7338],{3632:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>r,default:()=>f,frontMatter:()=>i,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"references/cheat-sheet/linux/asdf","title":"asdf","description":"asdf - Multiple Runtime Version Manager","source":"@site/docs/references/cheat-sheet/linux/asdf.md","sourceDirName":"references/cheat-sheet/linux","slug":"/references/cheat-sheet/linux/asdf","permalink":"/tg/docs/references/cheat-sheet/linux/asdf","draft":false,"unlisted":false,"editUrl":"https://github.com/m19v/m19v.github.io/blob/main/docs/references/cheat-sheet/linux/asdf.md","tags":[],"version":"current","lastUpdatedBy":"m19v","lastUpdatedAt":1761828399000,"frontMatter":{"title":"asdf"},"sidebar":"tutorialSidebar","previous":{"title":"Linux","permalink":"/tg/docs/category/linux"},"next":{"title":"Makefile","permalink":"/tg/docs/references/cheat-sheet/linux/makefile"}}');var l=n(4848),t=n(8453);const i={title:"asdf"},r=void 0,d={},o=[{value:"Manage plugins",id:"manage-plugins",level:2},{value:"Manage packages",id:"manage-packages",level:2},{value:"Utils",id:"utils",level:2},{value:"Examples:",id:"examples",level:2},{value:"Resources",id:"resources",level:2}];function c(e){const s={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"asdf"})," - Multiple Runtime Version Manager"]}),"\n",(0,l.jsx)(s.h2,{id:"manage-plugins",children:"Manage plugins"}),"\n",(0,l.jsxs)(s.p,{children:["Plugins are how ",(0,l.jsx)(s.code,{children:"asdf"})," knows to handle different tools like Java, Maven, Node.js etc."]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"asdf plugin list all                       # List plugins registered on asdf with URLs\nasdf plugin list [--urls] [--refs]         # List installed plugins [git urls] [git-ref]\n\nasdf plugin add <name> [<git-url>]         # Add a plugin from the asdf plugin repo OR, add a custom Git repo with name and URL\n\nasdf plugin remove <name>                  # Remove plugin and package versions\nasdf plugin update <name> [<git-ref>]      # Update a plugin to latest commit\n\nasdf plugin update --all                   # Update all plugins to latest\n"})}),"\n",(0,l.jsx)(s.h2,{id:"manage-packages",children:"Manage packages"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"asdf list <name> [version]                 # List installed versions of a package and optionally filter the versions\nasdf list all <name> [<version>]           # List all versions of a package and optionally filter the returned versions\n\nasdf latest --all                          # Show latest stable version of all the packages and if they are installed\n\n\nasdf install <name>                        # Install one tool at the version specified in the .tool-versions file\nasdf install <name> <version>              # Install a specific version of a package\nasdf uninstall <name> <version>            # Remove a specific version of a package\n\n\nasdf global <name> <version>               # Set the package global version\nasdf shell <name> <version>                # Set the package version to `ASDF_${LANG}_VERSION` in the current shell\n"})}),"\n",(0,l.jsx)(s.h2,{id:"utils",children:"Utils"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"asdf info                                  # Print asdf information\nasdf version                               # Print the currently installed version of asdf\nasdf update                                # Update asdf to the latest stable release\n"})}),"\n",(0,l.jsx)(s.h2,{id:"examples",children:"Examples:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"asdf plugin list all                       # list plugins on asdf and find one to be installed \nasdf plugin add terraform                  # add terraform plugin\nasdf plugin list                           # check if plugin is added\n\nasdf list all terraform                    # list all available terraform versions\nasdf install terraform <version>           # install specific terraform version\n\nasdf global terraform <version>            # set specific terraform version globally\n\nasdf list                                  # list all installed packages\n"})}),"\n",(0,l.jsx)(s.h2,{id:"resources",children:"Resources"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:["GitHub: ",(0,l.jsx)(s.a,{href:"https://github.com/asdf-vm/asdf",children:"https://github.com/asdf-vm/asdf"})]}),"\n",(0,l.jsxs)(s.li,{children:["Docs:   ",(0,l.jsx)(s.a,{href:"https://asdf-vm.com",children:"https://asdf-vm.com"})]}),"\n"]})]})}function f(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>r});var a=n(6540);const l={},t=a.createContext(l);function i(e){const s=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),a.createElement(t.Provider,{value:s},e.children)}}}]);