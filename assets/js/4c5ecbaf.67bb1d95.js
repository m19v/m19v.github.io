"use strict";(self.webpackChunkm_19_v=self.webpackChunkm_19_v||[]).push([[9612],{2072:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"references/cheat-sheet/linux/vim","title":"vim","description":"Global","source":"@site/docs/references/cheat-sheet/linux/vim.md","sourceDirName":"references/cheat-sheet/linux","slug":"/references/cheat-sheet/linux/vim","permalink":"/docs/references/cheat-sheet/linux/vim","draft":false,"unlisted":false,"editUrl":"https://github.com/m19v/m19v.github.io/blob/main/docs/references/cheat-sheet/linux/vim.md","tags":[],"version":"current","lastUpdatedBy":"m19v","lastUpdatedAt":1761828399000,"frontMatter":{"title":"vim"},"sidebar":"tutorialSidebar","previous":{"title":"Systemd","permalink":"/docs/references/cheat-sheet/linux/systemd"},"next":{"title":"Network","permalink":"/docs/category/network"}}');var a=t(4848),s=t(8453);const o={title:"vim"},i=void 0,l={},d=[{value:"Global",id:"global",level:2},{value:"Editing",id:"editing",level:2},{value:"Cursor movement",id:"cursor-movement",level:2},{value:"Search and replace",id:"search-and-replace",level:2},{value:"Cut and paste",id:"cut-and-paste",level:2},{value:"Marks and positions",id:"marks-and-positions",level:2},{value:"Registers",id:"registers",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"global",children:"Global"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'[count] [operation] [motion]                   # vim normal mode PATTERN\n\n# e.g.:\n# 2dw    -    [2] [delete] [word]\n#  da"   -    [] [delete] [around "]\n#  da"   -    [] [delete] [around "]\n#  dat   -    [] [delete] [around (html)tag]\n#  ca"   -    [] [change] [around "]\n#  va"   -    [] [visual mode mark] [around "]\n\n#  zf at   -  [] [fold] [around (html)tag]\n'})}),"\n",(0,a.jsx)(n.h2,{id:"editing",children:"Editing"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:".                      # repeat last command\n"})}),"\n",(0,a.jsx)(n.h2,{id:"cursor-movement",children:"Cursor movement"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"f(                     # find first (\n\n\n],)                    # move to closing )\n],}                    # move to closing }\n[,(                    # move to opening (\n[,{                    # move to opening {\n"})}),"\n",(0,a.jsx)(n.h2,{id:"search-and-replace",children:"Search and replace"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"/pattern               # search for pattern\n?pattern               # search backward for pattern\n\\vpattern              # 'very magic' pattern: non-alphanumeric characters are interpreted as special regex symbols (no escaping needed)\n\n:%s/old/new/g          # replace all old with new throughout file\n:%s/old/new/gc         # replace all old with new throughout file with confirmations\n"})}),"\n",(0,a.jsx)(n.h2,{id:"cut-and-paste",children:"Cut and paste"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:':g/{pattern}/d              # delete all lines containing pattern\n\ndG                          # delete(cut) from cursor to the end of document\ndgg                         # delete(cut) from cursor up to the beginning of document\ndi"                         # delete(cut) inside "\n\ny                           # yank(copy)\nyi"                         # yank(copy) inside "\nyaw                         # yank(copy) around word\n\np                           # paste\n\nALT + o                     # go to next line (insert mode)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"marks-and-positions",children:"Marks and positions"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"\ngf                          # goto file under cursor\nCtrl + w, f                 # goto file under cursor in new window\n\nCtrl + i                    # go to newer position in jump list\nCtrl + o                    # go to older position in jump list\n"})}),"\n",(0,a.jsx)(n.h2,{id:"registers",children:"Registers"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:":reg[isters]                # show registers content\n"})}),"\n",(0,a.jsx)(n.p,{children:"Working with multiple files"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:":ls or :buffers             # list all open buffers\n:b[uffer] file              # go to a buffer by file\n:b[uffer]#                  # go to a buffer by index #\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var r=t(6540);const a={},s=r.createContext(a);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);